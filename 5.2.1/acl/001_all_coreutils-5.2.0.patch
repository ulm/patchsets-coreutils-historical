--- README
+++ README
@@ -9,11 +9,11 @@
 
   [ basename cat chgrp chmod chown chroot cksum comm cp csplit cut date dd
   df dir dircolors dirname du echo env expand expr factor false fmt fold
-  ginstall groups head hostid hostname id join kill link ln logname ls
-  md5sum mkdir mkfifo mknod mv nice nl nohup od paste pathchk pinky pr
-  printenv printf ptx pwd readlink rm rmdir seq sha1sum shred sleep sort
-  split stat stty su sum sync tac tail tee test touch tr true tsort tty
-  uname unexpand uniq unlink uptime users vdir wc who whoami yes
+  ginstall groups head id join kill link ln logname ls md5sum mkdir mkfifo
+  mknod mv nice nl nohup od paste pathchk pinky pr printenv printf ptx pwd
+  readlink rm rmdir seq sha1sum shred sleep sort split stat stty su sum
+  sync tac tail tee test touch tr true tsort tty uname unexpand uniq
+  unlink uptime users vdir wc who whoami yes
 
 See the file NEWS for a list of major changes in the current release.
 
--- configure.ac
+++ configure.ac
@@ -24,9 +24,6 @@
 AC_CHECK_FUNCS(chroot,
 	OPTIONAL_BIN_PROGS="$OPTIONAL_BIN_PROGS chroot\$(EXEEXT)"
 	MAN="$MAN chroot.1")
-AC_CHECK_FUNCS(gethostid,
-	OPTIONAL_BIN_PROGS="$OPTIONAL_BIN_PROGS hostid\$(EXEEXT)"
-	MAN="$MAN hostid.1")
 
 jm_MACROS
 
@@ -233,7 +230,7 @@
 jm_LIB_CHECK
 
 AM_GNU_GETTEXT([external], [need-ngettext])
-AM_GNU_GETTEXT_VERSION(0.13.1)
+AM_GNU_GETTEXT_VERSION(0.13)
 
 AC_CONFIG_FILES(
   Makefile
--- doc/coreutils.texi
+++ doc/coreutils.texi
@@ -58,8 +58,6 @@
 * fold: (coreutils)fold invocation.             Wrap long input lines.
 * groups: (coreutils)groups invocation.         Print group names a user is in.
 * head: (coreutils)head invocation.             Output the first part of files.
-* hostid: (coreutils)hostid invocation.         Print numeric host identifier.
-* hostname: (coreutils)hostname invocation.     Print or set system name.
 * id: (coreutils)id invocation.                 Print real/effective uid/gid.
 * install: (coreutils)install invocation.       Copy and change attributes.
 * join: (coreutils)join invocation.             Join lines on a common field.
@@ -385,8 +383,6 @@
 
 * date invocation::              Print or set system date and time
 * uname invocation::             Print system information
-* hostname invocation::          Print or set system name
-* hostid invocation::            Print numeric host identifier.
 
 @command{date}: Print or set system date and time
 
@@ -10781,8 +10777,6 @@
 @menu
 * date invocation::             Print or set system date and time.
 * uname invocation::            Print system information.
-* hostname invocation::         Print or set system name.
-* hostid invocation::           Print numeric host identifier.
 @end menu
 
 
@@ -11425,55 +11419,6 @@
 @exitstatus
 
 
-@node hostname invocation
-@section @command{hostname}: Print or set system name
-
-@pindex hostname
-@cindex setting the hostname
-@cindex printing the hostname
-@cindex system name, printing
-@cindex appropriate privileges
-
-With no arguments, @command{hostname} prints the name of the current host
-system.  With one argument, it sets the current host name to the
-specified string.  You must have appropriate privileges to set the host
-name. Synopsis:
-
-@example
-hostname [@var{name}]
-@end example
-
-The only options are @option{--help} and @option{--version}.  @xref{Common
-options}.
-
-@exitstatus
-
-
-@node hostid invocation
-@section @command{hostid}: Print numeric host identifier.
-
-@pindex hostid
-@cindex printing the host identifier
-
-@command{hostid} prints the numeric identifier of the current host
-in hexadecimal.  This command accepts no arguments.
-The only options are @option{--help} and @option{--version}.
-@xref{Common options}.
-
-For example, here's what it prints on one system I use:
-
-@example
-$ hostid
-1bac013d
-@end example
-
-On that system, the 32-bit quantity happens to be closely
-related to the system's Internet address, but that isn't always
-the case.
-
-@exitstatus
-
-
 @node Modified command invocation
 @chapter Modified command invocation
 
--- man/Makefile.am
+++ man/Makefile.am
@@ -3,7 +3,7 @@
   basename.1 cat.1 chgrp.1 chmod.1 chown.1 chroot.1 cksum.1 comm.1 \
   cp.1 csplit.1 cut.1 date.1 dd.1 df.1 dir.1 dircolors.1 dirname.1 du.1 \
   echo.1 env.1 expand.1 expr.1 factor.1 false.1 fmt.1 fold.1 groups.1 \
-  head.1 hostid.1 hostname.1 id.1 install.1 join.1 kill.1 \
+  head.1 id.1 install.1 join.1 kill.1 \
   link.1 ln.1 logname.1 \
   ls.1 md5sum.1 mkdir.1 mkfifo.1 mknod.1 mv.1 nice.1 nl.1 nohup.1 od.1 \
   paste.1 pathchk.1 pinky.1 pr.1 printenv.1 printf.1 ptx.1 pwd.1 readlink.1 \
@@ -51,8 +51,6 @@
 fold.1:		$(common_dep)	$(srcdir)/fold.x	../src/fold.c
 groups.1:	$(common_dep)	$(srcdir)/groups.x	../src/groups.sh
 head.1:		$(common_dep)	$(srcdir)/head.x	../src/head.c
-hostid.1:	$(common_dep)	$(srcdir)/hostid.x	../src/hostid.c
-hostname.1:	$(common_dep)	$(srcdir)/hostname.x	../src/hostname.c
 id.1:		$(common_dep)	$(srcdir)/id.x		../src/id.c
 install.1:	$(common_dep)	$(srcdir)/install.x	../src/install.c
 join.1:		$(common_dep)	$(srcdir)/join.x	../src/join.c
--- src/Makefile.am
+++ src/Makefile.am
@@ -1,6 +1,6 @@
 ## Process this file with automake to produce Makefile.in -*-Makefile-*-
 
-EXTRA_PROGRAMS = chroot df hostid nice pinky stty su uname uptime users who
+EXTRA_PROGRAMS = chroot df nice pinky stty su uname uptime users who
 
 bin_SCRIPTS = groups
 bin_PROGRAMS = [ chgrp chown chmod cp dd dircolors du \
@@ -9,7 +9,7 @@
   cat cksum comm csplit cut expand fmt fold head join md5sum \
   nl od paste pr ptx sha1sum sort split sum tac tail tr tsort unexpand uniq wc \
   basename date dirname echo env expr factor false \
-  hostname id kill logname pathchk printenv printf pwd seq sleep tee \
+  id kill logname pathchk printenv printf pwd seq sleep tee \
   test true tty whoami yes \
   $(OPTIONAL_BIN_PROGS) $(DF_PROG)
 
--- src/getdef.c
+++ src/getdef.c
@@ -0,0 +1,272 @@
+/*
+ * Copyright 1991 - 1994, Julianne Frances Haugh and Chip Rosenthal
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. Neither the name of Julianne F. Haugh nor the names of its contributors
+ *    may be used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL JULIE HAUGH OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#include <paths.h>
+#include <stdio.h>
+#include <ctype.h>
+#include <stdlib.h>
+#include <syslog.h>
+#include <string.h>
+#include "getdef.h"
+
+/*
+ * A configuration item definition.
+ */
+
+struct itemdef {
+  const char *name;	/* name of the item			*/
+  char *value;		/* value given, or NULL if no value	*/
+};
+
+/*
+ * This list *must* be sorted by the "name" member.
+ */
+
+#define NUMDEFS	(sizeof(def_table)/sizeof(def_table[0]))
+static struct itemdef def_table[] = {
+  { "FAILLOG_ENAB",		"yes" },
+  { "FAIL_DELAY",               NULL },
+  { "FTMP_FILE",                NULL },
+};
+
+#ifndef LOGINDEFS
+#define LOGINDEFS "/etc/login.defs"
+#endif
+
+static char def_fname[] = LOGINDEFS;	/* login config defs file	*/
+static int def_loaded = 0;		/* are defs already loaded?	*/
+
+/* local function prototypes */
+static struct itemdef *def_find (const char *);
+static void def_load (void);
+
+/*
+ * getdef_num - get numerical value from table of definitions
+ *
+ * Returns numeric value of specified item, else the "dflt" value if
+ * the item is not defined.  Octal (leading "0") and hex (leading "0x")
+ * values are handled.
+ */
+
+int
+getdef_num(const char *item, int dflt)
+{
+	struct itemdef *d;
+
+	if (!def_loaded)
+		def_load();
+
+	if ((d = def_find(item)) == NULL || d->value == NULL)
+		return dflt;
+
+	return (int) strtol(d->value, (char **)NULL, 0);
+}
+
+/*
+ * putdef_str - override the value read from /etc/login.defs
+ * (also used when loading the initial defaults)
+ */
+
+int
+putdef_str (const char *name, const char *value)
+{
+  struct itemdef *d;
+  char *cp;
+
+  if (!def_loaded)
+    def_load ();
+
+  /*
+   * Locate the slot to save the value.  If this parameter
+   * is unknown then "def_find" will print an err message.
+   */
+  if ((d = def_find (name)) == NULL)
+    return -1;
+
+  /*
+   * Save off the value.
+   */
+  if ((cp = strdup (value)) == NULL)
+    {
+      fprintf (stderr, "Could not allocate space for config info.\n");
+      syslog (LOG_ERR, "could not allocate space for config info");
+      return -1;
+    }
+
+#if 0
+  /* We don't give the old value free, it could be our static
+     default */
+  if (d->value)
+    free(d->value);
+#endif
+
+  d->value = cp;
+  return 0;
+}
+
+
+/*
+ * def_find - locate named item in table
+ *
+ * Search through a sorted table of configurable items to locate the
+ * specified configuration option.
+ */
+
+static struct itemdef *
+def_find (const char *name)
+{
+  int min, max, curr, n;
+
+  /*
+   * Invariant - desired item in range [min:max].
+   */
+
+  min = 0;
+  max = NUMDEFS-1;
+
+  /*
+   * Binary search into the table.  Relies on the items being
+   * sorted by name.
+   */
+
+  while (min <= max)
+    {
+      curr = (min+max)/2;
+
+      if (! (n = strcmp(def_table[curr].name, name)))
+	return &def_table[curr];
+
+      if (n < 0)
+	min = curr+1;
+      else
+	max = curr-1;
+    }
+
+#if 0
+  /*
+   * Item was never found.
+   */
+
+  fprintf (stderr, "configuration error - unknown item '%s' (notify administrator)\r\n",
+	   name);
+  syslog (LOG_CRIT, "unknown configuration item `%s'", name);
+#endif
+  return (struct itemdef *) NULL;
+}
+
+/*
+ * def_load - load configuration table
+ *
+ * Loads the user-configured options from the default configuration file
+ */
+
+static void
+def_load(void)
+{
+	int i;
+	FILE *fp;
+	char buf[1024], *name, *value, *s;
+
+	/*
+	 * Open the configuration definitions file.
+	 */
+	if ((fp = fopen(def_fname, "r")) == NULL) {
+	  syslog (LOG_CRIT, "cannot open login definitions %s [%m]",
+		  def_fname);
+		return;
+	}
+
+	/*
+	 * Set the initialized flag.
+	 * (do it early to prevent recursion in putdef_str())
+	 */
+	++def_loaded;
+
+	/*
+	 * Go through all of the lines in the file.
+	 */
+	while (fgets(buf, sizeof(buf), fp) != NULL) {
+
+		/*
+		 * Trim trailing whitespace.
+		 */
+		for (i = strlen(buf)-1 ; i >= 0 ; --i) {
+			if (!isspace(buf[i]))
+				break;
+		}
+		buf[++i] = '\0';
+
+		/*
+		 * Break the line into two fields.
+		 */
+		name = buf + strspn(buf, " \t");	/* first nonwhite */
+		if (*name == '\0' || *name == '#')
+			continue;			/* comment or empty */
+
+		s = name + strcspn(name, " \t");	/* end of field */
+		if (*s == '\0')
+			continue;			/* only 1 field?? */
+
+		*s++ = '\0';
+		value = s + strspn(s, " \"\t");		/* next nonwhite */
+		*(value + strcspn(value, "\"")) = '\0';
+
+		/*
+		 * Store the value in def_table.
+		 */
+		putdef_str(name, value);
+	}
+	(void) fclose(fp);
+}
+
+#if 0
+int
+main(int argc, char **argv)
+{
+        int i;
+        char *cp;
+        struct itemdef *d;
+
+        def_load ();
+
+        for (i = 0 ; i < NUMDEFS ; ++i) {
+                if ((d = def_find(def_table[i].name)) == NULL)
+                        printf("error - lookup '%s' failed\n", def_table[i].name);
+                else
+                        printf("%4d %-24s %s\n", i+1, d->name, d->value);
+        }
+        for (i = 1;i < argc;i++) {
+                if ((cp = getdef_str (argv[1])) != NULL)
+                        printf ("%s `%s'\n", argv[1], cp);
+                else
+                        printf ("%s not found\n", argv[1]);
+        }
+        exit(0);
+}
+#endif
--- src/getdef.h
+++ src/getdef.h
@@ -0,0 +1,11 @@
+#ifndef _GETDEF_H
+#define _GETDEF_H
+
+/* getdef.c */
+extern int getdef_bool (const char *);
+extern long getdef_long (const char *, long);
+extern int getdef_num (const char *, int);
+extern char *getdef_str (const char *);
+extern int putdef_str (const char *, const char *);
+
+#endif /* _GETDEF_H */
--- src/install.c
+++ src/install.c
@@ -533,7 +533,8 @@
       while (pid != wait (&status))	/* Wait for kid to finish. */
 	/* Do nothing. */ ;
       if (status)
-	error (EXIT_FAILURE, 0, _("strip failed"));
+	/* Don't fail just because `strip' failed.  */
+	error (0, 0, _("strip failed"));
       break;
     }
 }
--- src/system.h
+++ src/system.h
@@ -268,7 +268,7 @@
 # define DEV_BSIZE BBSIZE
 #endif
 #ifndef DEV_BSIZE
-# define DEV_BSIZE 4096
+# define DEV_BSIZE 512
 #endif
 
 /* Extract or fake data from a `struct stat'.
--- tests/help-version
+++ tests/help-version
@@ -148,7 +148,7 @@
 
 for i in $all_programs; do
   # Skip these.
-  case $i in chroot|stty|tty|false) continue;; esac
+  case $i in chroot|stty|tty|false|df) continue;; esac
 
   rm -rf $tmp_in $tmp_in2 $tmp_dir $tmp_out
   echo > $tmp_in
--- tests/mv/setup
+++ tests/mv/setup
@@ -29,6 +29,8 @@
   fi
 
 done
+# Autobuild hack
+test -f /bin/uname.bin && other_partition_tmpdir=
 
 if test -z "$other_partition_tmpdir"; then
   cat <<EOF 1>&2
